/*! markdown-it-smartarrows 1.0.0 https://github.com//adam-p/markdown-it-smartarrows @license MIT */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).markdownitSmartArrows=e()}}(function(){return function e(n,t,r){function o(i,u){if(!t[i]){if(!n[i]){var c="function"==typeof require&&require;if(!u&&c)return c(i,!0);if(f)return f(i,!0);var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}var s=t[i]={exports:{}};n[i][0].call(s.exports,function(e){var t=n[i][1][e];return o(t||e)},s,s.exports,e,n,t,r)}return t[i].exports}for(var f="function"==typeof require&&require,i=0;i<r.length;i++)o(r[i]);return o}({1:[function(e,n,t){"use strict";var r=/->|<-|<->|=>|<=|<=>/;function o(e){if(!1!==e.md.options.smartArrows)for(var n=e.tokens.length-1;n>=0;n--)"inline"===e.tokens[n].type&&r.test(e.tokens[n].content)&&f(e.tokens[n].children)}function f(e){var n,t;for(n=e.length-1;n>=0;n--)"text"===(t=e[n]).type&&r.test(t.content)&&(t.content=t.content.replace(/(^|[^<])<->([^>]|$)/gm,"$1↔$2").replace(/(^|[^-])->([^>]|$)/gm,"$1→$2").replace(/(^|[^<])<-([^-]|$)/gm,"$1←$2").replace(/(^|[^<])<=>([^>]|$)/gm,"$1⇔$2").replace(/(^|[^=])=>([^>]|$)/gm,"$1⇒$2").replace(/(^|[^<])<=([^=]|$)/gm,"$1⇐$2"))}n.exports=function(e,n){e.core.ruler.before("replacements","smartArrows",o)}},{}]},{},[1])(1)});
